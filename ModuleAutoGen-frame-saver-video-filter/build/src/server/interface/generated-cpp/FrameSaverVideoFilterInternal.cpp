/* Autogenerated with kurento-module-creator */

#include <iostream>
#include "FrameSaverVideoFilterInternal.hpp"
#include <KurentoException.hpp>
#include <jsonrpc/JsonSerializer.hpp>
#include "MediaPipeline.hpp"

namespace kurento
{
namespace module
{
namespace kms_frame_saver_video_filter
{

std::shared_ptr<MediaPipeline> FrameSaverVideoFilterConstructor::getMediaPipelineParent ()
{
  return mediaPipelineParent;
}

void FrameSaverVideoFilterConstructor::Serialize (kurento::JsonSerializer &s)
{
  if (s.IsWriter) {
    s.SerializeNVP (mediaPipelineParent);

  } else {
    if (s.JsonValue.isNull ()) {
      throw KurentoException (MARSHALL_ERROR,
                              "'constructorParams' is required");
    } else if (!s.JsonValue.isObject ()){
      throw KurentoException (MARSHALL_ERROR,
                              "'constructorParams' should be an object");
    }

    if (!s.JsonValue.isMember ("mediaPipelineParent") || !s.JsonValue["mediaPipelineParent"].isConvertibleTo (Json::ValueType::stringValue) ) {
      throw KurentoException (MARSHALL_ERROR,
                              "'mediaPipelineParent' parameter should be a string");
    }

    s.SerializeNVP (mediaPipelineParent);

  }
}

} /* kms_frame_saver_video_filter */
} /* module */
} /* kurento */
